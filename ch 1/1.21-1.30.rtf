{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 Times-Roman;\f1\fmodern\fcharset0 Courier;\f2\froman\fcharset0 Times-Bold;
\f3\fnil\fcharset0 AppleColorEmoji;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sa240\partightenfactor0

\f0\fs24 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 1.21\
\pard\pardeftab720\partightenfactor0

\f1 \cf2 int f(int n)\{\
    if(n%2==0)\{ return n/2;\}\
    else\{\
        return f(3*n+1);\
    \}\
\}\
\pard\pardeftab720\sa240\partightenfactor0

\f0 \cf2 1.22\
\pard\pardeftab720\partightenfactor0

\f1 \cf2 int ackermann(int i,int j)\{\
    if(i==1 && j>=1)\{\
        return pow(2,j);\
    \}else if(i>=2 && j==1)\{\
        return ackermann(i-1, 2);\
    \}else\{\
        return ackermann(i-1, ackermann(i, j-1));\
    \}\
\}\
\pard\pardeftab720\sa240\partightenfactor0

\f0 \cf2 1.23\
\pard\pardeftab720\partightenfactor0

\f1 \cf2 int gcd(int x,int y) \{\
    if (y==0) return i;\
    return gcd(y, x%y);\
\}\
\pard\pardeftab720\sa240\partightenfactor0

\f0 \cf2 1.24\
\pard\pardeftab720\partightenfactor0

\f1 \cf2 #include<bits/stdc++.h>\
using namespace std;\
template <typename T>\
bool check(T* arr, T n, T x)\{\
    if(n==0) return arr[n]==x;\
    if(arr[n]==x) return 1;\
    return check(arr, n-1, x);\
\}\
int main()\{\
    int arr[]=\{1,2,3\};\
    int n=sizeof(arr)/sizeof(arr[0]);\
    cout<<check(arr,n,2)<<endl;\
    cout<<check(arr,n,4)<<endl;\
\}\
\pard\pardeftab720\sa240\partightenfactor0

\f0 \cf2 1.25\
\pard\pardeftab720\partightenfactor0

\f1 \cf2 #include<bits/stdc++.h>\
using namespace std;\
void func(int len, int n = 0) \{\
  int tmp = n;\
  if (spow(2, len) == n) return;\
  for (int i = 0; i < len; ++i) \{\
    int value = tmp & 0x1;\
    cout << value << ' ';\
    tmp = tmp >> 1;\
  \}\
  cout<<endl;\
  func(len, n + 1);\
\}\
int main() \{\
  func(3);\
  return 0;\
\}\
#include<bits/stdc++.h>\
using namespace std;\
void func(int len, int n ) \{\
  int tmp = n;\
  if (pow(2, len) == n) return;\
  for (int i = 0; i < len; ++i) \{\
    int value = tmp & 0x1;\
    cout << value << ' ';\
    tmp = tmp >> 1;\
  \}\
  cout<<endl;\
  func(len, n + 1);\
\}\
int main() \{\
  func(3,0);\
  return 0;\
\}\
\pard\pardeftab720\sa240\partightenfactor0

\f0 \cf2 1.27\
\pard\pardeftab720\partightenfactor0

\f1 \cf2 #include<bits/stdc++.h>\
using namespace std;\
template <class InputIterator, class T>\
T my_accumulate1(InputIterator first, InputIterator last, T sum) \{\
  while (first != last) \{\
    sum += *first;\
    first++;\
  \}\
  return sum;\
\}\
int main() \{\
  int arr[] = \{1, 2, 3, 4, 5, 6, 7, 8, 9\};\
    cout<<my_accumulate1(begin(arr), end(arr), 0);\
  return 0;\
\}\
\pard\pardeftab720\sa240\partightenfactor0

\f0 \cf2 1.28\
\pard\pardeftab720\partightenfactor0

\f1 \cf2 template <class InputIterator, class T, class Op>\
T my_accumulate2(InputIterator start, InputIterator last, T init, Op op) \{\
  for (; start != last; ++start) \{\
    init = op(init, *start);\
  \}\
  return init;\
\}\
\
int my_function(int x, int y) \{ return x + 2 * y; \}\
\
int main() \{\
  int array[] = \{1, 2, 3, 4, 5, 6, 7, 8, 9\};\
\
  std::cout << my_accumulate2(std::begin(array), std::end(array), 0,\
                              my_function)\
            << std::endl;\
  return 0;\
\}\
\pard\pardeftab720\sa280\partightenfactor0

\f2\b\fs28 \cf2 1.29 
\f3\b0 \uc0\u11088 \u65039 
\f2\b \
\pard\pardeftab720\partightenfactor0

\f1\b0\fs24 \cf2 template <class InputIterator, class OutputIterator>\
OutputIterator my_copy(InputIterator start, InputIterator last,\
                       OutputIterator output) \{\
  for (auto iter = start; iter != last; ++iter, ++output) \{\
    *output = *iter;\
  \}\
  return output;\
\}\
\
int main() \{\
  int array[] = \{1, 2, 3, 4, 5, 6, 7, 8, 9, 0\};\
\
  my_copy(std::begin(array), std::end(array),\
          std::ostream_iterator<int>(std::cout, ""));\
  std::cout << std::endl;\
  return 0;\
\}\
\pard\pardeftab720\sa280\partightenfactor0

\f2\b\fs28 \cf2 1.30
\f3\b0 \uc0\u11088 \u65039 
\f2\b \
\pard\pardeftab720\partightenfactor0

\f1\b0\fs24 \cf2 template <class T>\
void permutations(T list[], int k, int m) \{\
  do \{\
    std::copy(list, list + m, std::ostream_iterator<T>(std::cout, " "));\
    std::cout << std::endl;\
  \} while (std::next_permutation(list, list + m));\
  std::cout << std::endl;\
\}\
\
int main() \{\
  int array[] = \{1, 3, 2, 5, 4, 7, 6, 9, 8\};\
\
  std::sort(std::begin(array), std::end(array));\
  std::copy(std::begin(array), std::end(array),\
            std::ostream_iterator<int>(std::cout, " "));\
  std::cout << std::endl;\
\
  std::cout << "============" << std::endl;\
\
  permutations(array, 0, sizeof(array) / sizeof(array[0]));\
  return 0;\
\}\
}